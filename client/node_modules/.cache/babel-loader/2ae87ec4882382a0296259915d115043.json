{"ast":null,"code":"var _jsxFileName = \"/Users/me/Desktop/untitled folder/client/src/Components/Info.js\";\nimport React, { useState } from \"react\";\nimport { Jumbotron, Alert, Button } from \"react-bootstrap\";\nimport Announcements from \"./Announcements\";\nimport { useAppState } from \"../state\";\nimport { useHistory } from \"react-router-dom\";\nexport default function Info() {\n  const [value, setvalue] = useState(\"\");\n  const {\n    getTeacher,\n    getAnnouncementDetails,\n    getAnnouncementDetailsByInputName\n  } = useAppState();\n  const [announcements, setannouncements] = useState(\"\");\n  const [errors, seterrors] = useState([]);\n  const [teachername, setteachername] = useState(\"\");\n  const history = useHistory();\n\n  const getDetails = async () => {\n    if (value == \"\") {\n      setannouncements(\"\");\n      seterrors([\"Please provide valid name of teacher\"]);\n    } else {\n      var array = await getAnnouncementDetailsByInputName(value);\n      console.log(array.data.teacher);\n\n      if (array.data.teacher.length == 0) {\n        seterrors([\"Please provide valid name of teacher\"]);\n      } else {\n        setteachername(value);\n        setannouncements(array.data.teacher[0].announcements);\n        seterrors([]);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Jumbotron, {\n    className: \"jumbotron\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      marginBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Enter the keyword\"), /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      marginBottom: \"20px\"\n    },\n    placeholder: \"Enter the keyword\",\n    value: value,\n    onChange: e => setvalue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    style: {\n      marginBottom: \"20px\"\n    },\n    onClick: () => getDetails(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Get Announcements\"), \" \", announcements && /*#__PURE__*/React.createElement(Announcements, {\n    data: announcements,\n    name: teachername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), errors && errors.map((item, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Alert, {\n    className: \"mt-4\",\n    key: index,\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, item))));\n}","map":{"version":3,"sources":["/Users/me/Desktop/untitled folder/client/src/Components/Info.js"],"names":["React","useState","Jumbotron","Alert","Button","Announcements","useAppState","useHistory","Info","value","setvalue","getTeacher","getAnnouncementDetails","getAnnouncementDetailsByInputName","announcements","setannouncements","errors","seterrors","teachername","setteachername","history","getDetails","array","console","log","data","teacher","length","textAlign","marginBottom","e","target","map","item","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Jumbotron, Alert, Button } from \"react-bootstrap\";\nimport Announcements from \"./Announcements\";\nimport { useAppState } from \"../state\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Info() {\n  const [value, setvalue] = useState(\"\");\n  const {\n    getTeacher,\n    getAnnouncementDetails,\n    getAnnouncementDetailsByInputName,\n  } = useAppState();\n  const [announcements, setannouncements] = useState(\"\");\n  const [errors, seterrors] = useState([]);\n  const [teachername, setteachername] = useState(\"\");\n  const history = useHistory();\n\n  const getDetails = async () => {\n    if (value == \"\") {\n      setannouncements(\"\");\n      seterrors([\"Please provide valid name of teacher\"]);\n    } else {\n      var array = await getAnnouncementDetailsByInputName(value);\n      console.log(array.data.teacher);\n      if (array.data.teacher.length == 0) {\n        seterrors([\"Please provide valid name of teacher\"]);\n      } else {\n        setteachername(value);\n        setannouncements(array.data.teacher[0].announcements);\n        seterrors([]);\n      }\n    }\n  };\n\n  return (\n    <Jumbotron className=\"jumbotron\" style={{ textAlign: \"center\" }}>\n      <h4 style={{ marginBottom: \"20px\" }}>Enter the keyword</h4>\n      <input\n        style={{ marginBottom: \"20px\" }}\n        placeholder=\"Enter the keyword\"\n        value={value}\n        onChange={(e) => setvalue(e.target.value)}\n      />\n      <br />\n      <Button\n        variant=\"primary\"\n        style={{ marginBottom: \"20px\" }}\n        onClick={() => getDetails()}\n      >\n        Get Announcements\n      </Button>{\" \"}\n      {announcements && (\n        <Announcements data={announcements} name={teachername} />\n      )}\n      {errors &&\n        errors.map((item, index) => (\n          <>\n            <Alert className=\"mt-4\" key={index} variant=\"danger\">\n              {item}\n            </Alert>\n          </>\n        ))}\n    </Jumbotron>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}